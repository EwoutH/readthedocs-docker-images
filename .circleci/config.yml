version: 2.1

orbs:
  aws-s3: circleci/aws-s3@3.0.0

jobs:
  compile-upload-tool:
    parameters:
      os:
        type: string
      tool:
        type: string

    docker:
      image: cimg/python:3.10
      environment:
          OS: << parameters.os >>

    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.11
          docker_layer_caching: true
      - run:
          name: Download compile_version_upload_s3.sh script
          command: |
            wget https://raw.githubusercontent.com/readthedocs/readthedocs.org/humitos/build-tool-no-upload-production/scripts/compile_version_upload_s3.sh
      - run:
          name: Download Docker image
          command: |
            docker pull readthedocs/build:<< parameters.os >>
      - run:
          name: Compile tool version
          command: |
            ./compile_version_updload_s3.sh << parameters.tool >>
      - aws-s3/copy:
          aws-region: $AWS_REGION
          aws-access-key-id: $AWS_ACCESS_KEY_ID
          aws-secret-access-key: $AWS_SECRET_ACCESS_KEY
          from: << parameters.os >>-<< parameters.tool >>.tar.gz
          to: s3://${AWS_BUCKET_NAME}

  tests:
    docker:
      - image: cimg/python:3.10
        environment:
          PIPENV_VENV_IN_PROJECT=1
          PIPENV_IGNORE_VIRTUALENVS=1
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.6
          docker_layer_caching: true
      - run:
          name: Setup
          command: |
            pip install pipenv
            pipenv install
      - run:
          name: Build Docker image
          command: docker build -t readthedocs/build:ubuntu-22.04 .
      - run:
          name: Run tests
          command: pipenv run pytest

workflows:
  version: 2
  tests:
    jobs:
      - tests

  compile:
    jobs:
      - compile-upload-tool:
          name: compile-<< matrix.os >>-<< matrix.tool >>
          filters:
            branches:
              # only: /main/
              only: /humitos/automate-compile-upload-s3/
          environment:
            AWS_REGION: $ORG_AWS_SECRET_ACCESS_KEY
            AWS_BUCKET_NAME: $ORG_BUCKET_NAME
            AWS_ACCESS_KEY_ID: $ORG_AWS_SECRET_ACCESS_KEY
            AWS_SECRET_ACCESS_KEY: $ORG_AWS_SECRET_ACCESS_KEY

          matrix:
            parameters:
              os:
                - ubuntu-20.04
                - ubuntu-22.04
              tool:
                - "python 2.7.18"
                - "python 3.6.15"
                - "python 2.7.18"
                - "python 3.6.15"
                - "python 3.7.12"
                - "python 3.8.12"
                - "python 3.9.7"
                - "python 3.10.0"
                - "python pypy3.7-7.3.5"
                - "python miniconda3-4.7.12"
                - "python mambaforge-4.10.3-10"
                - "nodejs 14.17.6"
                - "nodejs 16.9.1"
                - "rust 1.55.0"
                - "golang 1.17.1"
